"""
Django settings for DjangoProject project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import configparser
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

config = configparser.ConfigParser()
config.read(
    Path(BASE_DIR, 'config.ini'))  # Assume you save the config in 'config.ini'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-p)(oab=4bmw*6$=b=ay9%s49we9seru&f-6j^_+)=)n6ngb5ty'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

APPEND_SLASH = True

ALLOWED_HOSTS = ['127.0.0.1']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
EXTERNAL_APPS = [
    'base',
    'category',
    'subcategory',
    'product'
]


INSTALLED_APPS += EXTERNAL_APPS 
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'DjangoProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoProject.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


# DATABASES
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': config['DATA_BASE']['NAME'],
        'USER': config['DATA_BASE']['USER'],
        'PASSWORD': config['DATA_BASE']['PASSWORD'],
        'HOST': config['DATA_BASE']['HOST'],
        'PORT': config['DATA_BASE']['PORT'],
        'OPTIONS': {
            'unix_socket': '/var/run/mysqld/mysqld.sock',
            'charset': 'utf8mb4',
        },
    }
}

ROLES = {
    'ADMIN': config['ROLE']['ADMIN'],
    'USER': config['ROLE']['USER'],
}

TOKENS = {
    'ACCESSTOKEN': config['TOKENS']['ACCESSTOKEN'],
    'REFRESHTOKEN': config['TOKENS']['REFRESHTOKEN'],
}

TIME = {
    'ACCESS_TOKEN_MAX_AGE': int(config['TIME']['ACCESS_TOKEN_MAX_AGE']),
    'REFRESH_TOKEN_MAX_AGE': int(config['TIME']['REFRESH_TOKEN_MAX_AGE']),
    'ACCESS_TOKEN_EXP': int(config['TIME']['ACCESS_TOKEN_EXP']),
    'REFRESH_TOKEN_EXP': int(config['TIME']['REFRESH_TOKEN_EXP']),
    'TIME_OUT_MAX_AGE': int(config['TIME']['TIME_OUT_MAX_AGE']),
}

ALGORITHMS = {
    'ENCODING': config['ALGORITHMS']['ENCODING'],
    'HASH_ALGORITHM': config['ALGORITHMS']['HASH_ALGORITHM'],
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True




# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'

STATICFILES_DIRS = [os.path.join(BASE_DIR, "static"),
]

# Media storage (optional, if you ever need user uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
